geom_point(shape = 1)+ #normalized data
geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#smoothed = T infers current data is smoothed and no separate gam modeling is needed. If modeling needed, input arguement as smoothed = F
x <- gam_analysis(raw_data, smoothed = T, fluo = 5, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
x <- na.omit(x)
#look at only tm result by well
output <- read_tsar(x, code = 0)
head(output)
tail(output)
#write output data file
write_tsar(read_tsar(x, code = 2), name = "0923_tm_val", file = "csv")
#join protein and ligand information
norm_data <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output, type = "by_template")
norm_data <- na.omit(norm_data)
head(norm_data)
tail(norm_data)
write_tsar(norm_data, name = "vitamin_tm_val_norm", file = "csv")
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
output_rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
output_rep <- read_tsar(output_rep, code = 0)
norm_data_rep <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output_rep, type = "by_template")
norm_data_rep <- na.omit(norm_data_rep)
Bigdata <- merge_norm(norm_data, norm_data_rep,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
head(conclusion)
tail(conclusion)
typeof(conclusion$Tm)
condition_IDs(Bigdata)
View(conclusion)
View(conclusion)
View(conclusion)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
#normalize fluorescence reading into scale between 0 and 1
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel) #, smoothed="Fluorescence")
Tm_est(test)
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#smoothed = T infers current data is smoothed and no separate gam modeling is needed. If modeling needed, input arguement as smoothed = F
x <- gam_analysis(raw_data, smoothed = T, fluo = 5, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
x <- na.omit(x)
#look at only tm result by well
output <- read_tsar(x, code = 0)
head(output)
tail(output)
#write output data file
write_tsar(read_tsar(x, code = 2), name = "0923_tm_val", file = "csv")
#join protein and ligand information
norm_data <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output, type = "by_template")
norm_data <- na.omit(norm_data)
head(norm_data)
tail(norm_data)
write_tsar(norm_data, name = "vitamin_tm_val_norm", file = "csv")
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
output_rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
output_rep <- read_tsar(output_rep, code = 0)
norm_data_rep <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output_rep, type = "by_template")
norm_data_rep <- na.omit(norm_data_rep)
Bigdata <- merge_norm(norm_data, norm_data_rep,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") #%>%
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") #%>%
#filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
Bigdata <- merge_norm(norm_data, norm_data_rep,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
summary(conclusion)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
devtools::install_local("/Users/candygao/Desktop/TSAR_0.1.0.tar.gz")
library(TSAR)
library(dplyr)
library(ggplot2)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
raw_data2 <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/vitamin2_17_RawData_Thermal Shift_02_171.eds.csv", header = TRUE)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel, smoothed="Fluorescence")
Tm_est(test)
#graphing
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
#geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#run analysis
vitamin1 <- gam_analysis(raw_data, smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
vitamin1rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
vitamin2 <- gam_analysis(raw_data2 , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
#write output data file
#write_tsar(read_tsar(vitamin1rep, code = 2), name = "vitamin1rep_tm_val", file = "csv")
#look at only tm result by well
vitamin1_tm <- read_tsar(vitamin1, code = 2)
vitamin1rep_tm <- read_tsar(vitamin1rep, code = 2)
vitamin2_tm <- read_tsar(vitamin2, code = 2)
#join protein and ligand information
vitamin1_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", vitamin1_tm, type = "by_template")
vitamin1rep_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", vitamin1rep_tm, type = "by_template")
vitamin2_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0217_WellInformation.xlsx", vitamin2_tm, type = "by_template")
#head(norm_data)
vitamin1_full <- na.omit(vitamin1_full)
vitamin1rep_full <- na.omit(vitamin1rep_full)
vitamin2_full <- na.omit(vitamin2_full)
jointout <- data.frame(vitamin1rep_full)
jointout <- jointout %>% filter(!is.na(Protein))
write.csv(jointout, file = "vit1rep_tmAnalysis.csv", row.names = F, quote = F)
Bigdata <- merge_norm(vitamin1_full, vitamin1rep_full,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
devtools::install_local("/Users/candygao/Desktop/TSAR_0.1.0.tar.gz")
library(TSAR)
library(dplyr)
library(ggplot2)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
#normalize fluorescence reading into scale between 0 and 1
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel) #, smoothed="Fluorescence")
Tm_est(test)
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#smoothed = T infers current data is smoothed and no separate gam modeling is needed. If modeling needed, input arguement as smoothed = F
x <- gam_analysis(raw_data, smoothed = T, fluo = 5, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
x <- na.omit(x)
#look at only tm result by well
output <- read_tsar(x, code = 0)
head(output)
tail(output)
#write output data file
write_tsar(read_tsar(x, code = 2), name = "0923_tm_val", file = "csv")
#join protein and ligand information
norm_data <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output, type = "by_template")
norm_data <- na.omit(norm_data)
head(norm_data)
tail(norm_data)
write_tsar(norm_data, name = "vitamin_tm_val_norm", file = "csv")
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
output_rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
output_rep <- read_tsar(output_rep, code = 0)
norm_data_rep <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output_rep, type = "by_template")
norm_data_rep <- na.omit(norm_data_rep)
Bigdata <- merge_norm(norm_data, norm_data_rep,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") #%>%
#filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
conclusion <- na.omit(conclusion)
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
#normalize fluorescence reading into scale between 0 and 1
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel) #, smoothed="Fluorescence")
Tm_est(test)
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#smoothed = T infers current data is smoothed and no separate gam modeling is needed. If modeling needed, input arguement as smoothed = F
x <- gam_analysis(raw_data, smoothed = T, fluo = 5, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
x <- na.omit(x)
#look at only tm result by well
output <- read_tsar(x, code = 0)
head(output)
tail(output)
#write output data file
write_tsar(read_tsar(x, code = 2), name = "0923_tm_val", file = "csv")
#join protein and ligand information
norm_data <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output, type = "by_template")
norm_data <- na.omit(norm_data)
head(norm_data)
tail(norm_data)
write_tsar(norm_data, name = "vitamin_tm_val_norm", file = "csv")
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
output_rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
output_rep <- read_tsar(output_rep, code = 0)
norm_data_rep <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output_rep, type = "by_template")
norm_data_rep <- na.omit(norm_data_rep)
Bigdata <- merge_norm(norm_data, norm_data_rep,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
analysis_rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
output_rep <- read_tsar(analysis_rep, code = 0)
norm_data_rep <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output_rep, type = "by_template")
norm_data_rep <- na.omit(norm_data_rep)
head(norm_data_rep)
head(norm_data)
tail(norm_data)
tail(norm_data_rep)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
raw_data2 <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/vitamin2_17_RawData_Thermal Shift_02_171.eds.csv", header = TRUE)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel, smoothed="Fluorescence")
Tm_est(test)
#graphing
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
#geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#run analysis
vitamin1 <- gam_analysis(raw_data, smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
vitamin1rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
vitamin2 <- gam_analysis(raw_data2 , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
#write output data file
#write_tsar(read_tsar(vitamin1rep, code = 2), name = "vitamin1rep_tm_val", file = "csv")
#look at only tm result by well
vitamin1_tm <- read_tsar(vitamin1, code = 2)
vitamin1rep_tm <- read_tsar(vitamin1rep, code = 2)
vitamin2_tm <- read_tsar(vitamin2, code = 2)
#join protein and ligand information
vitamin1_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", vitamin1_tm, type = "by_template")
vitamin1rep_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", vitamin1rep_tm, type = "by_template")
vitamin2_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0217_WellInformation.xlsx", vitamin2_tm, type = "by_template")
#head(norm_data)
vitamin1_full <- na.omit(vitamin1_full)
vitamin1rep_full <- na.omit(vitamin1rep_full)
vitamin2_full <- na.omit(vitamin2_full)
jointout <- data.frame(vitamin1rep_full)
jointout <- jointout %>% filter(!is.na(Protein))
write.csv(jointout, file = "vit1rep_tmAnalysis.csv", row.names = F, quote = F)
Bigdata <- merge_norm(vitamin1_full, vitamin1rep_full,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
norm_data_rep <- na.omit(norm_data_rep)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
#normalize fluorescence reading into scale between 0 and 1
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel) #, smoothed="Fluorescence")
Tm_est(test)
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#smoothed = T infers current data is smoothed and no separate gam modeling is needed. If modeling needed, input arguement as smoothed = F
x <- gam_analysis(raw_data, smoothed = T, fluo = 5, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
x <- na.omit(x)
#look at only tm result by well
output <- read_tsar(x, code = 0)
head(output)
tail(output)
#write output data file
write_tsar(read_tsar(x, code = 2), name = "0923_tm_val", file = "csv")
#join protein and ligand information
norm_data <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output, type = "by_template")
norm_data <- na.omit(norm_data)
head(norm_data)
tail(norm_data)
write_tsar(norm_data, name = "vitamin_tm_val_norm", file = "csv")
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
analysis_rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
output_rep <- read_tsar(analysis_rep, code = 0)
norm_data_rep <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output_rep, type = "by_template")
norm_data_rep <- na.omit(norm_data_rep)
norm_data <- na.omit(norm_data)
norm_data_rep <- na.omit(norm_data_rep)
Bigdata <- merge_norm(norm_data, norm_data_rep,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
View(conclusion)
tail(conclusion)
View(conclusion)
typeof(conclusion$Tm)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
raw_data2 <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/vitamin2_17_RawData_Thermal Shift_02_171.eds.csv", header = TRUE)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel, smoothed="Fluorescence")
Tm_est(test)
#graphing
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
#geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#run analysis
vitamin1 <- gam_analysis(raw_data, smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
vitamin1rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
vitamin2 <- gam_analysis(raw_data2 , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
#write output data file
#write_tsar(read_tsar(vitamin1rep, code = 2), name = "vitamin1rep_tm_val", file = "csv")
#look at only tm result by well
vitamin1_tm <- read_tsar(vitamin1, code = 2)
vitamin1rep_tm <- read_tsar(vitamin1rep, code = 2)
vitamin2_tm <- read_tsar(vitamin2, code = 2)
#join protein and ligand information
vitamin1_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", vitamin1_tm, type = "by_template")
vitamin1rep_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", vitamin1rep_tm, type = "by_template")
vitamin2_full <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0217_WellInformation.xlsx", vitamin2_tm, type = "by_template")
#head(norm_data)
vitamin1_full <- na.omit(vitamin1_full)
vitamin1rep_full <- na.omit(vitamin1rep_full)
vitamin2_full <- na.omit(vitamin2_full)
jointout <- data.frame(vitamin1rep_full)
jointout <- jointout %>% filter(!is.na(Protein))
write.csv(jointout, file = "vit1rep_tmAnalysis.csv", row.names = F, quote = F)
Bigdata <- merge_norm(vitamin1_full, vitamin1rep_full,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
View(conclusion)
raw_data <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_162.eds.csv", header = TRUE, nrows = 118177)
test <- raw_data %>%
filter(Well.Position == "A01") # select data for one well by well ID
#section data by temperature to remove messy area
#test <- subset(test, test$Temperature>40 & test$Temperature <50)
#normalize fluorescence reading into scale between 0 and 1
test <- normalize(test, fluo = 5, selected = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
head(test)
gammodel <- model_gam(test, x = test$Temperature, y = test$Normalized)
test <- model_fit(test, model = gammodel) #, smoothed="Fluorescence")
Tm_est(test)
result <- ggplot(data = test, aes(x = Temperature, y = Normalized)) +
geom_point(shape = 1)+ #normalized data
geom_point(aes(y=fitted), color = "blue", alpha = 1/10)+ #fitted value
geom_vline(xintercept = Tm_est(test), color = "red") #tm temperature value
result
#smoothed = T infers current data is smoothed and no separate gam modeling is needed. If modeling needed, input arguement as smoothed = F
x <- gam_analysis(raw_data, smoothed = T, fluo = 5, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
x <- na.omit(x)
#look at only tm result by well
output <- read_tsar(x, code = 0)
head(output)
tail(output)
#write output data file
write_tsar(read_tsar(x, code = 2), name = "0923_tm_val", file = "csv")
#join protein and ligand information
norm_data <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", read_tsar(x, code = 2), type = "by_template")
norm_data <- na.omit(norm_data)
head(norm_data)
tail(norm_data)
write_tsar(norm_data, name = "vitamin_tm_val_norm", file = "csv")
raw_data_rep <- read.csv(file = "/Users/candygao/Desktop/qpcrresult/experiment file/Vitamin_RawData_Thermal Shift_02_168.eds.csv", header = TRUE, nrows = 118177)
analysis_rep <- gam_analysis(raw_data_rep , smoothed = T, selections = c("Well.Position", "Temperature", "Fluorescence", "Normalized"))
output_rep <- read_tsar(analysis_rep, code = 2)
norm_data_rep <- join_well_info("/Users/candygao/Desktop/qpcrresult/experiment file/0203Well Information.xlsx", output_rep, type = "by_template")
norm_data_rep <- na.omit(norm_data_rep)
norm_data <- na.omit(norm_data)
norm_data_rep <- na.omit(norm_data_rep)
Bigdata <- merge_norm(norm_data, norm_data_rep,
"Vitamin_RawData_Thermal Shift_02_162.eds.csv",
"Vitamin_RawData_Thermal Shift_02_168.eds.csv",
"20230203", "20230209")
condition_IDs(Bigdata)
well_IDs(Bigdata)
conclusion <- Bigdata%>%
filter(condition_ID != "NA_NA") %>%
filter(condition_ID != "CA FL_Riboflavin")
TSA_boxplot(conclusion, color_by = "Protein", label_by = "Ligand", separate_legend = FALSE)
control_ID <- "CA FL_DMSO"
tsa_compare_plot(conclusion,
y = "Fluorescence",
control_condition = "CA FL_DMSO")
